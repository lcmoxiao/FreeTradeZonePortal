<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--1.  servlet配置 -->
    <servlet>
        <servlet-name>HelloSpringWeb</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/config/springmvcConfig.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- 2. servlet拦截地址配置 -->
    <servlet-mapping>
        <!--
            （1）servlet名称 ,要与前面的名称保持一致
            （2）拦截地址
        -->
        <servlet-name>HelloSpringWeb</servlet-name>
        <!-- servlet对应的地址空间
               第一种：*.action，访问以.action结尾由DispatcherServlet进行解析
               第二种：/，所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析使用此种方式可以实现RESTfu1风格的ur1
               第三种：/*，这样配置不对，使用这种配置，最终要转发到一个jsp页面时，  然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。
        -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value></param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <filter>
        <filter-name>loginFilter</filter-name>
        <filter-class>com.ftzp.filter.lc.LoginFilter</filter-class>
        <init-param>
            <param-name>ignores</param-name>
            <param-value>/js,/css,/index,/favicon,/layui,/html
                ,/logout,/login,/error,/visit,/permission/mine
            </param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>loginFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>HttpPutFormFilter</filter-name>
        <filter-class>org.springframework.web.filter.FormContentFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HttpPutFormFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <welcome-file-list>
        <welcome-file>/index</welcome-file>
    </welcome-file-list>


</web-app>